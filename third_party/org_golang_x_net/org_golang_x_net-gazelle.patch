diff -N /dev/null bpf/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ bpf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "asm.go",
+        "constants.go",
+        "doc.go",
+        "instructions.go",
+        "setter.go",
+        "vm.go",
+        "vm_instructions.go",
+    ],
+    importpath = "golang.org/x/net/bpf",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "instructions_test.go",
+        "vm_aluop_test.go",
+        "vm_bpf_test.go",
+        "vm_extension_test.go",
+        "vm_jump_test.go",
+        "vm_load_test.go",
+        "vm_ret_test.go",
+        "vm_scratch_test.go",
+        "vm_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":go_default_library"],
+    deps = [
+        "//ipv4:go_default_library",
+        "//ipv6:go_default_library",
+        "//nettest:go_default_library",
+    ],
+)
+
diff -N /dev/null context/ctxhttp/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ context/ctxhttp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["ctxhttp.go"],
+    importpath = "golang.org/x/net/context/ctxhttp",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["ctxhttp_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null context/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ context/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "context.go",
+        "go17.go",
+        "go19.go",
+        "pre_go17.go",
+        "pre_go19.go",
+    ],
+    importpath = "golang.org/x/net/context",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "context_test.go",
+        "withtimeout_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null dict/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ dict/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["dict.go"],
+    importpath = "golang.org/x/net/dict",
+    visibility = ["//visibility:public"],
+)
+
diff -N /dev/null dns/dnsmessage/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ dns/dnsmessage/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["message.go"],
+    importpath = "golang.org/x/net/dns/dnsmessage",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "example_test.go",
+        "message_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null html/atom/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ html/atom/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "atom.go",
+        "table.go",
+    ],
+    importpath = "golang.org/x/net/html/atom",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "atom_test.go",
+        "table_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null html/charset/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ html/charset/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["charset.go"],
+    importpath = "golang.org/x/net/html/charset",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//html:go_default_library",
+        "@org_golang_x_text//encoding:go_default_library",
+        "@org_golang_x_text//encoding/charmap:go_default_library",
+        "@org_golang_x_text//encoding/htmlindex:go_default_library",
+        "@org_golang_x_text//transform:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["charset_test.go"],
+    data = glob(["testdata/**"]),
+    embed = [":go_default_library"],
+    deps = ["@org_golang_x_text//transform:go_default_library"],
+)
+
diff -N /dev/null html/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ html/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "const.go",
+        "doc.go",
+        "doctype.go",
+        "entity.go",
+        "escape.go",
+        "foreign.go",
+        "node.go",
+        "parse.go",
+        "render.go",
+        "token.go",
+    ],
+    importpath = "golang.org/x/net/html",
+    visibility = ["//visibility:public"],
+    deps = ["//html/atom:go_default_library"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "entity_test.go",
+        "escape_test.go",
+        "example_test.go",
+        "node_test.go",
+        "parse_test.go",
+        "render_test.go",
+        "token_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":go_default_library"],
+    deps = ["//html/atom:go_default_library"],
+)
+
diff -N /dev/null http/httpguts/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ http/httpguts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "guts.go",
+        "httplex.go",
+    ],
+    importpath = "golang.org/x/net/http/httpguts",
+    visibility = ["//visibility:public"],
+    deps = ["//idna:go_default_library"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["httplex_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null http/httpproxy/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ http/httpproxy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["proxy.go"],
+    importpath = "golang.org/x/net/http/httpproxy",
+    visibility = ["//visibility:public"],
+    deps = ["//idna:go_default_library"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "export_test.go",
+        "go19_test.go",
+        "proxy_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null http2/h2c/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ http2/h2c/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["h2c.go"],
+    importpath = "golang.org/x/net/http2/h2c",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//http/httpguts:go_default_library",
+        "//http2:go_default_library",
+        "//http2/hpack:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["h2c_test.go"],
+    embed = [":go_default_library"],
+    deps = ["//http2:go_default_library"],
+)
+
diff -N /dev/null http2/h2demo/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ http2/h2demo/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "h2demo.go",
+        "tmpl.go",
+    ],
+    importpath = "golang.org/x/net/http2/h2demo",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//http2:go_default_library",
+        "@com_google_cloud_go_storage//:go_default_library",
+        "@org_go4//syncutil/singleflight:go_default_library",
+        "@org_golang_x_build//autocertcache:go_default_library",
+        "@org_golang_x_crypto//acme/autocert:go_default_library",
+    ],
+)
+
+go_binary(
+    name = "h2demo",
+    embed = [":go_default_library"],
+    visibility = ["//visibility:public"],
+)
+
diff -N /dev/null http2/h2i/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ http2/h2i/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,58 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["h2i.go"],
+    importpath = "golang.org/x/net/http2/h2i",
+    visibility = ["//visibility:private"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//http2:go_default_library",
+            "//http2/hpack:go_default_library",
+            "@org_golang_x_crypto//ssh/terminal:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "h2i",
+    embed = [":go_default_library"],
+    visibility = ["//visibility:public"],
+)
+
diff -N /dev/null http2/hpack/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ http2/hpack/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "encode.go",
+        "hpack.go",
+        "huffman.go",
+        "tables.go",
+    ],
+    importpath = "golang.org/x/net/http2/hpack",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "encode_test.go",
+        "hpack_test.go",
+        "tables_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null http2/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ http2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,57 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "ciphers.go",
+        "client_conn_pool.go",
+        "databuffer.go",
+        "errors.go",
+        "flow.go",
+        "frame.go",
+        "go111.go",
+        "gotrack.go",
+        "headermap.go",
+        "http2.go",
+        "not_go111.go",
+        "pipe.go",
+        "server.go",
+        "transport.go",
+        "write.go",
+        "writesched.go",
+        "writesched_priority.go",
+        "writesched_random.go",
+    ],
+    importpath = "golang.org/x/net/http2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//http/httpguts:go_default_library",
+        "//http2/hpack:go_default_library",
+        "//idna:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "ciphers_test.go",
+        "databuffer_test.go",
+        "errors_test.go",
+        "flow_test.go",
+        "frame_test.go",
+        "gotrack_test.go",
+        "http2_test.go",
+        "pipe_test.go",
+        "server_push_test.go",
+        "server_test.go",
+        "transport_test.go",
+        "writesched_priority_test.go",
+        "writesched_random_test.go",
+        "writesched_test.go",
+        "z_spec_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":go_default_library"],
+    deps = ["//http2/hpack:go_default_library"],
+)
+
diff -N /dev/null icmp/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ icmp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,54 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "dstunreach.go",
+        "echo.go",
+        "endpoint.go",
+        "extension.go",
+        "helper_posix.go",
+        "interface.go",
+        "ipv4.go",
+        "ipv6.go",
+        "listen_posix.go",
+        "listen_stub.go",
+        "message.go",
+        "messagebody.go",
+        "mpls.go",
+        "multipart.go",
+        "packettoobig.go",
+        "paramprob.go",
+        "sys_freebsd.go",
+        "timeexceeded.go",
+    ],
+    importpath = "golang.org/x/net/icmp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//internal/iana:go_default_library",
+        "//internal/socket:go_default_library",
+        "//ipv4:go_default_library",
+        "//ipv6:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "diag_test.go",
+        "example_test.go",
+        "extension_test.go",
+        "ipv4_test.go",
+        "message_test.go",
+        "multipart_test.go",
+    ],
+    embed = [":go_default_library"],
+    deps = [
+        "//internal/iana:go_default_library",
+        "//internal/socket:go_default_library",
+        "//ipv4:go_default_library",
+        "//ipv6:go_default_library",
+        "//nettest:go_default_library",
+    ],
+)
+
diff -N /dev/null idna/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ idna/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "idna10.0.0.go",
+        "idna9.0.0.go",
+        "punycode.go",
+        "tables10.0.0.go",
+        "tables11.0.0.go",
+        "tables12.00.go",
+        "tables9.0.0.go",
+        "trie.go",
+        "trieval.go",
+    ],
+    importpath = "golang.org/x/net/idna",
+    visibility = ["//visibility:public"],
+    deps = [
+        "@org_golang_x_text//secure/bidirule:go_default_library",
+        "@org_golang_x_text//unicode/bidi:go_default_library",
+        "@org_golang_x_text//unicode/norm:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "example_test.go",
+        "idna_test.go",
+        "punycode_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null internal/iana/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ internal/iana/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["const.go"],
+    importpath = "golang.org/x/net/internal/iana",
+    visibility = ["//:__subpackages__"],
+)
+
diff -N /dev/null internal/socket/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ internal/socket/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,152 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "cmsghdr.go",
+        "cmsghdr_bsd.go",
+        "cmsghdr_linux_32bit.go",
+        "cmsghdr_linux_64bit.go",
+        "cmsghdr_solaris_64bit.go",
+        "cmsghdr_stub.go",
+        "empty.s",
+        "error_unix.go",
+        "error_windows.go",
+        "iovec_32bit.go",
+        "iovec_64bit.go",
+        "iovec_solaris_64bit.go",
+        "iovec_stub.go",
+        "mmsghdr_stub.go",
+        "mmsghdr_unix.go",
+        "msghdr_bsd.go",
+        "msghdr_bsdvar.go",
+        "msghdr_linux.go",
+        "msghdr_linux_32bit.go",
+        "msghdr_linux_64bit.go",
+        "msghdr_openbsd.go",
+        "msghdr_solaris_64bit.go",
+        "msghdr_stub.go",
+        "rawconn.go",
+        "rawconn_mmsg.go",
+        "rawconn_msg.go",
+        "rawconn_nommsg.go",
+        "rawconn_nomsg.go",
+        "socket.go",
+        "sys.go",
+        "sys_bsd.go",
+        "sys_bsdvar.go",
+        "sys_const_unix.go",
+        "sys_darwin.go",
+        "sys_dragonfly.go",
+        "sys_go1_11_darwin.go",
+        "sys_linkname.go",
+        "sys_linux.go",
+        "sys_linux_386.go",
+        "sys_linux_386.s",
+        "sys_linux_amd64.go",
+        "sys_linux_arm.go",
+        "sys_linux_arm64.go",
+        "sys_linux_mips.go",
+        "sys_linux_mips64.go",
+        "sys_linux_mips64le.go",
+        "sys_linux_mipsle.go",
+        "sys_linux_ppc64.go",
+        "sys_linux_ppc64le.go",
+        "sys_linux_s390x.go",
+        "sys_linux_s390x.s",
+        "sys_netbsd.go",
+        "sys_posix.go",
+        "sys_solaris.go",
+        "sys_solaris_amd64.s",
+        "sys_stub.go",
+        "sys_unix.go",
+        "sys_windows.go",
+        "zsys_darwin_386.go",
+        "zsys_darwin_amd64.go",
+        "zsys_darwin_arm.go",
+        "zsys_darwin_arm64.go",
+        "zsys_dragonfly_amd64.go",
+        "zsys_freebsd_386.go",
+        "zsys_freebsd_amd64.go",
+        "zsys_freebsd_arm.go",
+        "zsys_linux_386.go",
+        "zsys_linux_amd64.go",
+        "zsys_linux_arm.go",
+        "zsys_linux_arm64.go",
+        "zsys_linux_mips.go",
+        "zsys_linux_mips64.go",
+        "zsys_linux_mips64le.go",
+        "zsys_linux_mipsle.go",
+        "zsys_linux_ppc64.go",
+        "zsys_linux_ppc64le.go",
+        "zsys_linux_s390x.go",
+        "zsys_netbsd_386.go",
+        "zsys_netbsd_amd64.go",
+        "zsys_netbsd_arm.go",
+        "zsys_openbsd_386.go",
+        "zsys_openbsd_amd64.go",
+        "zsys_openbsd_arm.go",
+        "zsys_solaris_amd64.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/net/internal/socket",
+    visibility = ["//:__subpackages__"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "@org_golang_x_sys//unix:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["socket_test.go"],
+    embed = [":go_default_library"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//nettest:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//nettest:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//nettest:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//nettest:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//nettest:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//nettest:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//nettest:go_default_library",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//nettest:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
diff -N /dev/null internal/socks/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ internal/socks/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "client.go",
+        "socks.go",
+    ],
+    importpath = "golang.org/x/net/internal/socks",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["dial_test.go"],
+    embed = [":go_default_library"],
+    deps = ["//internal/sockstest:go_default_library"],
+)
+
diff -N /dev/null internal/sockstest/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ internal/sockstest/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["server.go"],
+    importpath = "golang.org/x/net/internal/sockstest",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//internal/socks:go_default_library",
+        "//nettest:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["server_test.go"],
+    embed = [":go_default_library"],
+    deps = ["//internal/socks:go_default_library"],
+)
+
diff -N /dev/null internal/timeseries/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ internal/timeseries/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["timeseries.go"],
+    importpath = "golang.org/x/net/internal/timeseries",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["timeseries_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null ipv4/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ipv4/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,103 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "batch.go",
+        "control.go",
+        "control_bsd.go",
+        "control_pktinfo.go",
+        "control_stub.go",
+        "control_unix.go",
+        "control_windows.go",
+        "dgramopt.go",
+        "doc.go",
+        "endpoint.go",
+        "genericopt.go",
+        "header.go",
+        "helper.go",
+        "iana.go",
+        "icmp.go",
+        "icmp_linux.go",
+        "icmp_stub.go",
+        "packet.go",
+        "payload.go",
+        "payload_cmsg.go",
+        "payload_nocmsg.go",
+        "sockopt.go",
+        "sockopt_posix.go",
+        "sockopt_stub.go",
+        "sys_asmreq.go",
+        "sys_asmreq_stub.go",
+        "sys_asmreqn.go",
+        "sys_asmreqn_stub.go",
+        "sys_bpf.go",
+        "sys_bpf_stub.go",
+        "sys_bsd.go",
+        "sys_darwin.go",
+        "sys_dragonfly.go",
+        "sys_freebsd.go",
+        "sys_linux.go",
+        "sys_solaris.go",
+        "sys_ssmreq.go",
+        "sys_ssmreq_stub.go",
+        "sys_stub.go",
+        "sys_windows.go",
+        "zsys_darwin.go",
+        "zsys_dragonfly.go",
+        "zsys_freebsd_386.go",
+        "zsys_freebsd_amd64.go",
+        "zsys_freebsd_arm.go",
+        "zsys_linux_386.go",
+        "zsys_linux_amd64.go",
+        "zsys_linux_arm.go",
+        "zsys_linux_arm64.go",
+        "zsys_linux_mips.go",
+        "zsys_linux_mips64.go",
+        "zsys_linux_mips64le.go",
+        "zsys_linux_mipsle.go",
+        "zsys_linux_ppc.go",
+        "zsys_linux_ppc64.go",
+        "zsys_linux_ppc64le.go",
+        "zsys_linux_s390x.go",
+        "zsys_netbsd.go",
+        "zsys_openbsd.go",
+        "zsys_solaris.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/net/ipv4",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//bpf:go_default_library",
+        "//internal/iana:go_default_library",
+        "//internal/socket:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "bpf_test.go",
+        "control_test.go",
+        "example_test.go",
+        "header_test.go",
+        "helper_posix_test.go",
+        "helper_stub_test.go",
+        "icmp_test.go",
+        "multicast_test.go",
+        "multicastlistener_test.go",
+        "multicastsockopt_test.go",
+        "readwrite_test.go",
+        "unicast_test.go",
+        "unicastsockopt_test.go",
+    ],
+    embed = [":go_default_library"],
+    deps = [
+        "//bpf:go_default_library",
+        "//icmp:go_default_library",
+        "//internal/iana:go_default_library",
+        "//internal/socket:go_default_library",
+        "//nettest:go_default_library",
+    ],
+)
+
diff -N /dev/null ipv6/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ipv6/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,105 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "batch.go",
+        "control.go",
+        "control_rfc2292_unix.go",
+        "control_rfc3542_unix.go",
+        "control_stub.go",
+        "control_unix.go",
+        "control_windows.go",
+        "dgramopt.go",
+        "doc.go",
+        "endpoint.go",
+        "genericopt.go",
+        "header.go",
+        "helper.go",
+        "iana.go",
+        "icmp.go",
+        "icmp_bsd.go",
+        "icmp_linux.go",
+        "icmp_solaris.go",
+        "icmp_stub.go",
+        "icmp_windows.go",
+        "payload.go",
+        "payload_cmsg.go",
+        "payload_nocmsg.go",
+        "sockopt.go",
+        "sockopt_posix.go",
+        "sockopt_stub.go",
+        "sys_asmreq.go",
+        "sys_asmreq_stub.go",
+        "sys_bpf.go",
+        "sys_bpf_stub.go",
+        "sys_bsd.go",
+        "sys_darwin.go",
+        "sys_freebsd.go",
+        "sys_linux.go",
+        "sys_solaris.go",
+        "sys_ssmreq.go",
+        "sys_ssmreq_stub.go",
+        "sys_stub.go",
+        "sys_windows.go",
+        "zsys_darwin.go",
+        "zsys_dragonfly.go",
+        "zsys_freebsd_386.go",
+        "zsys_freebsd_amd64.go",
+        "zsys_freebsd_arm.go",
+        "zsys_linux_386.go",
+        "zsys_linux_amd64.go",
+        "zsys_linux_arm.go",
+        "zsys_linux_arm64.go",
+        "zsys_linux_mips.go",
+        "zsys_linux_mips64.go",
+        "zsys_linux_mips64le.go",
+        "zsys_linux_mipsle.go",
+        "zsys_linux_ppc.go",
+        "zsys_linux_ppc64.go",
+        "zsys_linux_ppc64le.go",
+        "zsys_linux_s390x.go",
+        "zsys_netbsd.go",
+        "zsys_openbsd.go",
+        "zsys_solaris.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/net/ipv6",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//bpf:go_default_library",
+        "//internal/iana:go_default_library",
+        "//internal/socket:go_default_library",
+    ],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "bpf_test.go",
+        "control_test.go",
+        "example_test.go",
+        "header_test.go",
+        "helper_posix_test.go",
+        "helper_stub_test.go",
+        "helper_unix_test.go",
+        "helper_windows_test.go",
+        "icmp_test.go",
+        "mocktransponder_test.go",
+        "multicast_test.go",
+        "multicastlistener_test.go",
+        "multicastsockopt_test.go",
+        "readwrite_test.go",
+        "sockopt_test.go",
+        "unicast_test.go",
+        "unicastsockopt_test.go",
+    ],
+    embed = [":go_default_library"],
+    deps = [
+        "//bpf:go_default_library",
+        "//icmp:go_default_library",
+        "//internal/iana:go_default_library",
+        "//nettest:go_default_library",
+    ],
+)
+
diff -N /dev/null lif/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ lif/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "address.go",
+        "binary.go",
+        "lif.go",
+        "link.go",
+        "sys.go",
+        "sys_solaris_amd64.s",
+        "syscall.go",
+        "zsys_solaris_amd64.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/net/lif",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "address_test.go",
+        "link_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null nettest/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ nettest/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "conntest.go",
+        "nettest.go",
+        "nettest_stub.go",
+        "nettest_unix.go",
+        "nettest_windows.go",
+    ],
+    importpath = "golang.org/x/net/nettest",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["conntest_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null netutil/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ netutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["listen.go"],
+    importpath = "golang.org/x/net/netutil",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "helper_stub_test.go",
+        "helper_unix_test.go",
+        "helper_windows_test.go",
+        "listen_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null proxy/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ proxy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "dial.go",
+        "direct.go",
+        "per_host.go",
+        "proxy.go",
+        "socks5.go",
+    ],
+    importpath = "golang.org/x/net/proxy",
+    visibility = ["//visibility:public"],
+    deps = ["//internal/socks:go_default_library"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "dial_test.go",
+        "per_host_test.go",
+        "proxy_test.go",
+    ],
+    embed = [":go_default_library"],
+    deps = [
+        "//internal/socks:go_default_library",
+        "//internal/sockstest:go_default_library",
+        "//nettest:go_default_library",
+    ],
+)
+
diff -N /dev/null publicsuffix/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ publicsuffix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "list.go",
+        "table.go",
+    ],
+    importpath = "golang.org/x/net/publicsuffix",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "example_test.go",
+        "list_test.go",
+        "table_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null route/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ route/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,53 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "address.go",
+        "binary.go",
+        "empty.s",
+        "interface.go",
+        "interface_announce.go",
+        "interface_classic.go",
+        "interface_freebsd.go",
+        "interface_multicast.go",
+        "interface_openbsd.go",
+        "message.go",
+        "route.go",
+        "route_classic.go",
+        "route_openbsd.go",
+        "sys.go",
+        "sys_darwin.go",
+        "sys_dragonfly.go",
+        "sys_freebsd.go",
+        "sys_netbsd.go",
+        "sys_openbsd.go",
+        "syscall.go",
+        "syscall_go1_11_darwin.go",
+        "syscall_go1_12_darwin.go",
+        "zsys_darwin.go",
+        "zsys_dragonfly.go",
+        "zsys_freebsd_386.go",
+        "zsys_freebsd_amd64.go",
+        "zsys_freebsd_arm.go",
+        "zsys_netbsd.go",
+        "zsys_openbsd.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/net/route",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "address_darwin_test.go",
+        "address_test.go",
+        "message_darwin_test.go",
+        "message_freebsd_test.go",
+        "message_test.go",
+        "route_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null trace/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ trace/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "events.go",
+        "histogram.go",
+        "trace.go",
+    ],
+    importpath = "golang.org/x/net/trace",
+    visibility = ["//visibility:public"],
+    deps = ["//internal/timeseries:go_default_library"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "histogram_test.go",
+        "trace_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null webdav/internal/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ webdav/internal/xml/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "marshal.go",
+        "read.go",
+        "typeinfo.go",
+        "xml.go",
+    ],
+    importpath = "golang.org/x/net/webdav/internal/xml",
+    visibility = ["//webdav:__subpackages__"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "atom_test.go",
+        "example_test.go",
+        "marshal_test.go",
+        "read_test.go",
+        "xml_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null webdav/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ webdav/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "file.go",
+        "if.go",
+        "lock.go",
+        "prop.go",
+        "webdav.go",
+        "xml.go",
+    ],
+    importpath = "golang.org/x/net/webdav",
+    visibility = ["//visibility:public"],
+    deps = ["//webdav/internal/xml:go_default_library"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "file_test.go",
+        "if_test.go",
+        "lock_test.go",
+        "prop_test.go",
+        "webdav_test.go",
+        "xml_test.go",
+    ],
+    embed = [":go_default_library"],
+    deps = ["//webdav/internal/xml:go_default_library"],
+)
+
diff -N /dev/null websocket/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ websocket/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "client.go",
+        "dial.go",
+        "hybi.go",
+        "server.go",
+        "websocket.go",
+    ],
+    importpath = "golang.org/x/net/websocket",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "dial_test.go",
+        "exampledial_test.go",
+        "examplehandler_test.go",
+        "hybi_test.go",
+        "websocket_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null xsrftoken/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ xsrftoken/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["xsrf.go"],
+    importpath = "golang.org/x/net/xsrftoken",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["xsrf_test.go"],
+    embed = [":go_default_library"],
+)
+
