diff -N /dev/null cpu/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ cpu/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "asm_aix_ppc64.s",
+        "byteorder.go",
+        "cpu.go",
+        "cpu_arm.go",
+        "cpu_gc_s390x.go",
+        "cpu_gc_x86.go",
+        "cpu_linux.go",
+        "cpu_linux_arm.go",
+        "cpu_linux_arm64.go",
+        "cpu_linux_ppc64x.go",
+        "cpu_linux_s390x.go",
+        "cpu_mips64x.go",
+        "cpu_mipsx.go",
+        "cpu_other_arm64.go",
+        "cpu_s390x.s",
+        "cpu_x86.go",
+        "cpu_x86.s",
+    ],
+    importpath = "golang.org/x/sys/cpu",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["cpu_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null plan9/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ plan9/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "asm.s",
+        "asm_plan9_386.s",
+        "asm_plan9_amd64.s",
+        "asm_plan9_arm.s",
+        "const_plan9.go",
+        "dir_plan9.go",
+        "env_plan9.go",
+        "errors_plan9.go",
+        "pwd_go15_plan9.go",
+        "pwd_plan9.go",
+        "race.go",
+        "race0.go",
+        "str.go",
+        "syscall.go",
+        "syscall_plan9.go",
+        "zsyscall_plan9_386.go",
+        "zsyscall_plan9_amd64.go",
+        "zsyscall_plan9_arm.go",
+        "zsysnum_plan9.go",
+    ],
+    importpath = "golang.org/x/sys/plan9",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["syscall_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null unix/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ unix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,272 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "affinity_linux.go",
+        "aliases.go",
+        "asm_aix_ppc64.s",
+        "asm_darwin_386.s",
+        "asm_darwin_amd64.s",
+        "asm_darwin_arm.s",
+        "asm_darwin_arm64.s",
+        "asm_dragonfly_amd64.s",
+        "asm_freebsd_386.s",
+        "asm_freebsd_amd64.s",
+        "asm_freebsd_arm.s",
+        "asm_linux_386.s",
+        "asm_linux_amd64.s",
+        "asm_linux_arm.s",
+        "asm_linux_arm64.s",
+        "asm_linux_mips64x.s",
+        "asm_linux_mipsx.s",
+        "asm_linux_ppc64x.s",
+        "asm_linux_s390x.s",
+        "asm_netbsd_386.s",
+        "asm_netbsd_amd64.s",
+        "asm_netbsd_arm.s",
+        "asm_openbsd_386.s",
+        "asm_openbsd_amd64.s",
+        "asm_openbsd_arm.s",
+        "asm_solaris_amd64.s",
+        "bluetooth_linux.go",
+        "cap_freebsd.go",
+        "constants.go",
+        "dev_darwin.go",
+        "dev_dragonfly.go",
+        "dev_freebsd.go",
+        "dev_linux.go",
+        "dev_netbsd.go",
+        "dev_openbsd.go",
+        "dirent.go",
+        "endian_big.go",
+        "endian_little.go",
+        "env_unix.go",
+        "errors_freebsd_386.go",
+        "errors_freebsd_amd64.go",
+        "errors_freebsd_arm.go",
+        "fcntl.go",
+        "fcntl_darwin.go",
+        "fcntl_linux_32bit.go",
+        "ioctl.go",
+        "pagesize_unix.go",
+        "pledge_openbsd.go",
+        "race.go",
+        "race0.go",
+        "readdirent_getdents.go",
+        "readdirent_getdirentries.go",
+        "sockcmsg_dragonfly.go",
+        "sockcmsg_linux.go",
+        "sockcmsg_unix.go",
+        "sockcmsg_unix_other.go",
+        "str.go",
+        "syscall.go",
+        "syscall_bsd.go",
+        "syscall_darwin.1_12.go",
+        "syscall_darwin.1_13.go",
+        "syscall_darwin.go",
+        "syscall_darwin_386.1_11.go",
+        "syscall_darwin_386.go",
+        "syscall_darwin_amd64.1_11.go",
+        "syscall_darwin_amd64.go",
+        "syscall_darwin_arm.1_11.go",
+        "syscall_darwin_arm.go",
+        "syscall_darwin_arm64.1_11.go",
+        "syscall_darwin_arm64.go",
+        "syscall_darwin_libSystem.go",
+        "syscall_dragonfly.go",
+        "syscall_dragonfly_amd64.go",
+        "syscall_freebsd.go",
+        "syscall_freebsd_386.go",
+        "syscall_freebsd_amd64.go",
+        "syscall_freebsd_arm.go",
+        "syscall_linux.go",
+        "syscall_linux_386.go",
+        "syscall_linux_amd64.go",
+        "syscall_linux_amd64_gc.go",
+        "syscall_linux_arm.go",
+        "syscall_linux_arm64.go",
+        "syscall_linux_gc.go",
+        "syscall_linux_gc_386.go",
+        "syscall_linux_mips64x.go",
+        "syscall_linux_mipsx.go",
+        "syscall_linux_ppc64x.go",
+        "syscall_linux_s390x.go",
+        "syscall_netbsd.go",
+        "syscall_netbsd_386.go",
+        "syscall_netbsd_amd64.go",
+        "syscall_netbsd_arm.go",
+        "syscall_openbsd.go",
+        "syscall_openbsd_386.go",
+        "syscall_openbsd_amd64.go",
+        "syscall_openbsd_arm.go",
+        "syscall_solaris.go",
+        "syscall_solaris_amd64.go",
+        "syscall_unix.go",
+        "syscall_unix_gc.go",
+        "syscall_unix_gc_ppc64x.go",
+        "timestruct.go",
+        "unveil_openbsd.go",
+        "xattr_bsd.go",
+        "zerrors_darwin_386.go",
+        "zerrors_darwin_amd64.go",
+        "zerrors_darwin_arm.go",
+        "zerrors_darwin_arm64.go",
+        "zerrors_dragonfly_amd64.go",
+        "zerrors_freebsd_386.go",
+        "zerrors_freebsd_amd64.go",
+        "zerrors_freebsd_arm.go",
+        "zerrors_linux_386.go",
+        "zerrors_linux_amd64.go",
+        "zerrors_linux_arm.go",
+        "zerrors_linux_arm64.go",
+        "zerrors_linux_mips.go",
+        "zerrors_linux_mips64.go",
+        "zerrors_linux_mips64le.go",
+        "zerrors_linux_mipsle.go",
+        "zerrors_linux_ppc64.go",
+        "zerrors_linux_ppc64le.go",
+        "zerrors_linux_s390x.go",
+        "zerrors_netbsd_386.go",
+        "zerrors_netbsd_amd64.go",
+        "zerrors_netbsd_arm.go",
+        "zerrors_openbsd_386.go",
+        "zerrors_openbsd_amd64.go",
+        "zerrors_openbsd_arm.go",
+        "zerrors_solaris_amd64.go",
+        "zptrace386_linux.go",
+        "zptracearm_linux.go",
+        "zptracemips_linux.go",
+        "zptracemipsle_linux.go",
+        "zsyscall_darwin_386.1_11.go",
+        "zsyscall_darwin_386.1_13.go",
+        "zsyscall_darwin_386.1_13.s",
+        "zsyscall_darwin_386.go",
+        "zsyscall_darwin_386.s",
+        "zsyscall_darwin_amd64.1_11.go",
+        "zsyscall_darwin_amd64.1_13.go",
+        "zsyscall_darwin_amd64.1_13.s",
+        "zsyscall_darwin_amd64.go",
+        "zsyscall_darwin_amd64.s",
+        "zsyscall_darwin_arm.1_11.go",
+        "zsyscall_darwin_arm.1_13.go",
+        "zsyscall_darwin_arm.1_13.s",
+        "zsyscall_darwin_arm.go",
+        "zsyscall_darwin_arm.s",
+        "zsyscall_darwin_arm64.1_11.go",
+        "zsyscall_darwin_arm64.1_13.go",
+        "zsyscall_darwin_arm64.1_13.s",
+        "zsyscall_darwin_arm64.go",
+        "zsyscall_darwin_arm64.s",
+        "zsyscall_dragonfly_amd64.go",
+        "zsyscall_freebsd_386.go",
+        "zsyscall_freebsd_amd64.go",
+        "zsyscall_freebsd_arm.go",
+        "zsyscall_linux_386.go",
+        "zsyscall_linux_amd64.go",
+        "zsyscall_linux_arm.go",
+        "zsyscall_linux_arm64.go",
+        "zsyscall_linux_mips.go",
+        "zsyscall_linux_mips64.go",
+        "zsyscall_linux_mips64le.go",
+        "zsyscall_linux_mipsle.go",
+        "zsyscall_linux_ppc64.go",
+        "zsyscall_linux_ppc64le.go",
+        "zsyscall_linux_s390x.go",
+        "zsyscall_netbsd_386.go",
+        "zsyscall_netbsd_amd64.go",
+        "zsyscall_netbsd_arm.go",
+        "zsyscall_openbsd_386.go",
+        "zsyscall_openbsd_amd64.go",
+        "zsyscall_openbsd_arm.go",
+        "zsyscall_solaris_amd64.go",
+        "zsysctl_openbsd_386.go",
+        "zsysctl_openbsd_amd64.go",
+        "zsysctl_openbsd_arm.go",
+        "zsysnum_darwin_386.go",
+        "zsysnum_darwin_amd64.go",
+        "zsysnum_darwin_arm.go",
+        "zsysnum_darwin_arm64.go",
+        "zsysnum_dragonfly_amd64.go",
+        "zsysnum_freebsd_386.go",
+        "zsysnum_freebsd_amd64.go",
+        "zsysnum_freebsd_arm.go",
+        "zsysnum_linux_386.go",
+        "zsysnum_linux_amd64.go",
+        "zsysnum_linux_arm.go",
+        "zsysnum_linux_arm64.go",
+        "zsysnum_linux_mips.go",
+        "zsysnum_linux_mips64.go",
+        "zsysnum_linux_mips64le.go",
+        "zsysnum_linux_mipsle.go",
+        "zsysnum_linux_ppc64.go",
+        "zsysnum_linux_ppc64le.go",
+        "zsysnum_linux_s390x.go",
+        "zsysnum_netbsd_386.go",
+        "zsysnum_netbsd_amd64.go",
+        "zsysnum_netbsd_arm.go",
+        "zsysnum_openbsd_386.go",
+        "zsysnum_openbsd_amd64.go",
+        "zsysnum_openbsd_arm.go",
+        "ztypes_darwin_386.go",
+        "ztypes_darwin_amd64.go",
+        "ztypes_darwin_arm.go",
+        "ztypes_darwin_arm64.go",
+        "ztypes_dragonfly_amd64.go",
+        "ztypes_freebsd_386.go",
+        "ztypes_freebsd_amd64.go",
+        "ztypes_freebsd_arm.go",
+        "ztypes_linux_386.go",
+        "ztypes_linux_amd64.go",
+        "ztypes_linux_arm.go",
+        "ztypes_linux_arm64.go",
+        "ztypes_linux_mips.go",
+        "ztypes_linux_mips64.go",
+        "ztypes_linux_mips64le.go",
+        "ztypes_linux_mipsle.go",
+        "ztypes_linux_ppc64.go",
+        "ztypes_linux_ppc64le.go",
+        "ztypes_linux_s390x.go",
+        "ztypes_netbsd_386.go",
+        "ztypes_netbsd_amd64.go",
+        "ztypes_netbsd_arm.go",
+        "ztypes_openbsd_386.go",
+        "ztypes_openbsd_amd64.go",
+        "ztypes_openbsd_arm.go",
+        "ztypes_solaris_amd64.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/sys/unix",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "creds_test.go",
+        "darwin_test.go",
+        "dev_linux_test.go",
+        "dirent_test.go",
+        "example_exec_test.go",
+        "example_flock_test.go",
+        "export_test.go",
+        "getdirentries_test.go",
+        "mmap_unix_test.go",
+        "openbsd_test.go",
+        "sendfile_test.go",
+        "syscall_bsd_test.go",
+        "syscall_darwin_test.go",
+        "syscall_freebsd_test.go",
+        "syscall_internal_linux_test.go",
+        "syscall_linux_test.go",
+        "syscall_netbsd_test.go",
+        "syscall_openbsd_test.go",
+        "syscall_solaris_test.go",
+        "syscall_test.go",
+        "syscall_unix_test.go",
+        "timestruct_test.go",
+        "xattr_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null windows/mkwinsyscall/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/mkwinsyscall/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "go_default_library",
+    srcs = ["mkwinsyscall.go"],
+    importpath = "golang.org/x/sys/windows/mkwinsyscall",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "mkwinsyscall",
+    embed = [":go_default_library"],
+    visibility = ["//visibility:public"],
+)
+
diff -N /dev/null windows/registry/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/registry/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "key.go",
+        "syscall.go",
+        "value.go",
+        "zsyscall_windows.go",
+    ],
+    importpath = "golang.org/x/sys/windows/registry",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//windows:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "export_test.go",
+        "registry_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null windows/svc/debug/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/svc/debug/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "log.go",
+        "service.go",
+    ],
+    importpath = "golang.org/x/sys/windows/svc/debug",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//windows/svc:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
diff -N /dev/null windows/svc/eventlog/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/svc/eventlog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "install.go",
+        "log.go",
+    ],
+    importpath = "golang.org/x/sys/windows/svc/eventlog",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//windows:go_default_library",
+            "//windows/registry:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["log_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null windows/svc/example/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/svc/example/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "beep.go",
+        "install.go",
+        "main.go",
+        "manage.go",
+        "service.go",
+    ],
+    importpath = "golang.org/x/sys/windows/svc/example",
+    visibility = ["//visibility:private"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//windows/svc:go_default_library",
+            "//windows/svc/debug:go_default_library",
+            "//windows/svc/eventlog:go_default_library",
+            "//windows/svc/mgr:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "example",
+    embed = [":go_default_library"],
+    visibility = ["//visibility:public"],
+)
+
diff -N /dev/null windows/svc/mgr/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/svc/mgr/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "config.go",
+        "mgr.go",
+        "recovery.go",
+        "service.go",
+    ],
+    importpath = "golang.org/x/sys/windows/svc/mgr",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//windows:go_default_library",
+            "//windows/svc:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["mgr_test.go"],
+    embed = [":go_default_library"],
+)
+
diff -N /dev/null windows/svc/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/svc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "event.go",
+        "go12.go",
+        "go13.go",
+        "security.go",
+        "service.go",
+        "sys_386.s",
+        "sys_amd64.s",
+    ],
+    importpath = "golang.org/x/sys/windows/svc",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//windows:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = ["svc_test.go"],
+    embed = [":go_default_library"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//windows/svc/mgr:go_default_library",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
diff -N /dev/null windows/BUILD.bazel
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ windows/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "go_default_library",
+    srcs = [
+        "aliases.go",
+        "dll_windows.go",
+        "env_windows.go",
+        "eventlog.go",
+        "exec_windows.go",
+        "memory_windows.go",
+        "race.go",
+        "race0.go",
+        "security_windows.go",
+        "service.go",
+        "str.go",
+        "syscall.go",
+        "syscall_windows.go",
+        "types_windows.go",
+        "types_windows_386.go",
+        "types_windows_amd64.go",
+        "zerrors_windows.go",
+        "zknownfolderids_windows.go",
+        "zsyscall_windows.go",
+    ],
+    importpath = "golang.org/x/sys/windows",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go_default_test",
+    srcs = [
+        "syscall_test.go",
+        "syscall_windows_test.go",
+    ],
+    embed = [":go_default_library"],
+)
+
