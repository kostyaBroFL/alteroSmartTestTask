syntax = "proto3";

option go_package = ".;ms_generation";

import "validator.proto";
import "google/protobuf/timestamp.proto";

// MsGeneration is the service that generates the date
// by simulating multiple devices.
service MsGeneration {
    rpc AddDevice (AddDeviceRequest) returns (AddDeviceResponse);
    rpc RemoveDevice (RemoveDeviceRequest) returns (RemoveDeviceResponse);
}

// AddDeviceRequest is the request message for AddDevice method.
message AddDeviceRequest {
    // Device is device to add.
   Device device = 1 [(validator.field) = {
        msg_exists: true
    }];
}

// AddDeviceResponse is the response message for AddDevice method.
message AddDeviceResponse {
    AddDeviceStatus status = 1;
}

message RemoveDeviceRequest {
    DeviceId device_id = 1 [(validator.field) = {
        msg_exists: true
    }];
}
// todo docs

message RemoveDeviceResponse {}

enum AddDeviceStatus {
    UNDEFINED = 0;
    SUCCESS = 1;
    DEVICE_IS_EXISTS = 2;
}

// TODO: я пытался то что ниже пренести в отдельный файл,
// но не ввышло в короткое время

// Device is the message to describe information about a specific device.
message Device {
    // DeviceId is the unique identifier of specific device.
    DeviceId device_id = 1 [(validator.field) = {
        msg_exists: true
    }];
    // Frequency it is how many times the device transmits data per second.
    int32 frequency = 2;
}

// DeviceData is the data that the device sends.
message DeviceData {
    // DeviceId is the unique identifier of specific device.
    DeviceId device_id = 1 [(validator.field) = {
        msg_exists: true
    }];
    // Data is the data generated by the device.
    double data = 2;
    // Timestamp is time of generating data.
    google.protobuf.Timestamp timestamp = 3 [(validator.field) = {
        msg_exists: true
    }];
}

// DeviceId is the message that store the unique identifier of specific device.
message DeviceId {
    // Name is the unique title of specific device.
    string name = 1 [(validator.field) = {
        string_not_empty: true
    }];
}
