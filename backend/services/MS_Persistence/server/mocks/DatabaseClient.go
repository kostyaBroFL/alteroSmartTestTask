// Code generated by mockery v1.0.0
package mocks

import database "alteroSmartTestTask/backend/services/MS_Persistence/database"
import context "context"
import mock "github.com/stretchr/testify/mock"

// DatabaseClient is an autogenerated mock type for the DatabaseClient type
type DatabaseClient struct {
	mock.Mock
}

// GetDeviceId provides a mock function with given fields: ctx, req.
func (_m *DatabaseClient) GetDeviceId(ctx context.Context, req *database.GetDeviceIdReq) (int64, error) {
	ret := _m.Called(ctx, req)

	var r0 int64
	if rf, ok := ret.Get(0).(func(context.Context, *database.GetDeviceIdReq) int64); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *database.GetDeviceIdReq) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertDeviceData provides a mock function with given fields: ctx, req.
func (_m *DatabaseClient) InsertDeviceData(ctx context.Context, req *database.InsertDeviceDataReq) error {
	ret := _m.Called(ctx, req)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *database.InsertDeviceDataReq) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Get(0).(error)
	}

	return r0
}
